from flask import Flask, jsonify, request
from google.cloud.sql.connector import Connector
import pymysql
import random
import os

app = Flask(__name__)

def create_conn():
    conn = pymysql.connect(
        user=os.environ["DB_USER"],
        password=os.environ["DB_PASSWORD"],
        host=os.environ["CLOUD_SQL_CONNECTION_NAME"],
        database=os.environ["DB_NAME"],
    )
    return conn

@app.route('/api/generate', methods=['POST'])
def generate_number():
    instance_name = request.args.get('instance', 'Unknown')
    number = random.randint(0, 100000)

    with create_conn() as conn:
        with conn.cursor() as cursor:
            cursor.execute("INSERT INTO numbers (instance_name, number) VALUES (%s, %s)", (instance_name, number))
        conn.commit()

    return jsonify({"instance_name": instance_name, "number": number})

@app.route('/api/generate/all', methods=['POST'])
def generate_all_numbers():
    total_instances = 10
    numbers_per_instance = 1000

    for i in range(1, total_instances + 1):
        instance_name = f"Instance {i}"
        for _ in range(numbers_per_instance):
            number = random.randint(0, 100000)
            with create_conn() as conn:
                with conn.cursor() as cursor:
                    cursor.execute("INSERT INTO numbers (instance_name, number) VALUES (%s, %s)", (instance_name, number))
                conn.commit()

    return jsonify({"message": "Random numbers generated successfully."})

@app.route('/api/results', methods=['GET'])
def get_results():
    results = {
        "table": [],
        "largest": None,
        "smallest": None
    }

    with create_conn() as conn:
        with conn.cursor() as cursor:
            # Retrieve the largest and smallest numbers and their instances
            cursor.execute("SELECT instance_name, number FROM numbers ORDER BY number DESC LIMIT 1")
            results["largest"] = cursor.fetchone()
            cursor.execute("SELECT instance_name, number FROM numbers ORDER BY number ASC LIMIT 1")
            results["smallest"] = cursor.fetchone()

            # Retrieve the total count of numbers generated by each instance
            cursor.execute("SELECT instance_name, COUNT(*) as count FROM numbers GROUP BY instance_name")
            instance_counts = cursor.fetchall()
            for row in instance_counts:
                results["table"].append({"instance_name": row[0], "count": row[1]})

    return jsonify(results)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8080)
